#!/usr/bin/env pybricks-micropython
from pybricks.hubs import EV3Brick
from pybricks.ev3devices import (Motor, TouchSensor, ColorSensor,
                                 InfraredSensor, UltrasonicSensor, GyroSensor)
from pybricks.parameters import Port, Stop, Direction, Button, Color
from pybricks.tools import wait, StopWatch, DataLog
from pybricks.robotics import DriveBase
from pybricks.media.ev3dev import SoundFile, ImageFile
from pybricks.ev3devices import ColorSensor
from time import sleep
from pybricks.parameters import Port, Color



# Configuration
ev3 = EV3Brick()
gripper_motor = Motor(Port.A)
elbow_motor = Motor(Port.B, Direction.COUNTERCLOCKWISE, [8, 40])
base_motor = Motor(Port.C, Direction.COUNTERCLOCKWISE, [12, 36])
elbow_motor.control.limits(speed=60, acceleration=80)
base_motor.control.limits(speed=60, acceleration=80)
base_switch = TouchSensor(Port.S1)
elbow_sensor = ColorSensor(Port.S2)

#Constants: positions and colors.
LEFT = 204
MIDLEFT = 155 #Kalibrera denna!!
MIDDLE = 110
MIDRIGHT = 66
RIGHT = 8

color_names = {
    Color.BLACK: "Black",
    Color.BLUE: "Blue",
    Color.GREEN: "Green",
    Color.YELLOW: "Yellow",
    Color.RED: "Red",
    Color.WHITE: "White",
    Color.BROWN: "Brown",
    Color.ORANGE: "Orange",
}


# Initializes the robot & rotates it to a starting position
elbow_motor.run_time(-30, 1000)
elbow_motor.run(15)
while elbow_sensor.reflection() > 0:
    wait(10)
elbow_motor.reset_angle(0)
elbow_motor.hold()
base_motor.run(-60)
while not base_switch.pressed():
    wait(10)
base_motor.reset_angle(0)
base_motor.hold()
gripper_motor.run_until_stalled(200, then=Stop.COAST, duty_limit=50)
gripper_motor.reset_angle(0)
gripper_motor.run_target(200, -90)
for i in range(3):
    wait(100)


def robot_pick(position):
    # This function makes the robot base rotate to the indicated
    # position. There it lowers the elbow, closes the gripper, and
    # raises the elbow to pick up the object.

    base_motor.run_target(60, position)
    elbow_motor.run_target(60, -pickupheight)
    gripper_motor.run_until_stalled(200, then=Stop.HOLD, duty_limit=50)
    elbow_motor.run_target(60, 0)


def robot_release(position):
    # This function makes the robot base rotate to the indicated
    # position. There it lowers the elbow, opens the gripper to
    # release the object. Then it raises its arm again.

    base_motor.run_target(60, position)
    elbow_motor.run_target(60, -dropheight)
    gripper_motor.run_target(200, -90)
    elbow_motor.run_target(60, 0)


def read_color():
    color_value = elbow_sensor.color()
    color_name = color_names.get(color_value, "Unknown")
    print(color_name)
    return color_name

def read_rgb_value():
    color_value = elbow_sensor.rgb()
    #rgb_value = color_rgb_values.get(color_value, (0, 0, 0))
    print(color_value)

#Variables: Height, pickup-location and designated colors.
pickupheight = 32
dropheight = 32
pickupzone = RIGHT
colorleft = "Blue"
colormidleft = "Red"
colormid = "Yellow"
colormidright = "Orange"
colorright = "Orange"
a = True

while a == True:
    robot_pick(pickupzone)
    read_rgb_value()
    robot_release(pickupzone)

    # color_name = read_color()
    # if color_name == colorleft:
    #     robot_release(LEFT)
    # elif color_name == colormidleft:
    #     robot_release(MIDLEFT)
    # elif color_name == colormid:
    #     robot_release(MIDDLE)
    # elif color_name == colormidright:
    #     robot_release(MIDRIGHT)
    # elif color_name == colorright:
    #     robot_release(RIGHT)
    # else:
    #     robot_release